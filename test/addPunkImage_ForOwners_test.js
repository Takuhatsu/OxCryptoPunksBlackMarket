const { ethers } = require('hardhat');

describe('--Mint and addPunkImage--', function () {
  it('@The addPunkImage function Test for Owners Only', async function () {
    const MyContract = await ethers.getContractFactory('OxCryptoPunksBlackMarket');
    const myContract = await MyContract.deploy();

    const [user1, user2] = await ethers.getSigners();

    // Mint punks for user1
    const punkPrice = 7000000000000000; // 1 punk cost
    const mintTxUser1Punk0 = await myContract.connect(user1).getPunk(1, {
      value: punkPrice
    });
    await mintTxUser1Punk0.wait();

    const mintTxUser1Punk1 = await myContract.connect(user1).getPunk(1, {
      value: punkPrice
    });
    await mintTxUser1Punk1.wait();

    // Mint punks for user2
    const mintTxUser2Punk3 = await myContract.connect(user2).getPunk(1, {
      value: punkPrice
    });
    await mintTxUser2Punk3.wait();

    const mintTxUser2Punk4 = await myContract.connect(user2).getPunk(1, {
      value: punkPrice
    });
    await mintTxUser2Punk4.wait();

    const imageData = 
    '0xa66e2cffa66e2cffa66e2cffa66e2cffa66e2cffa66e2cff00000000a66e2cff000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a66e2cffa66e2cffa66e2cffa66e2cffa66e2cffa66e2cffa66e2cffa66e2cffa66e2cff0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a66e2cffa66e2cffa66e2cffa66e2cffa66e2cffa66e2cffa66e2cffa66e2cffa66e2cffa66e2cffa66e2cffa66e2cff0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a66e2cffa66e2cffa66e2cffa66e2cffa66e2cffa66e2cffa66e2cffa66e2cffa66e2cffa66e2cffa66e2cffa66e2cff00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a66e2cffa66e2cffa66e2cffa66e2cffa66e2cffa66e2cffa66e2cffdbb180ffa66e2cffa66e2cffa66e2cff000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a66e2cffa66e2cffa66e2cffdbb180ffa66e2cffdbb180ffdbb180ffa66e2cffdbb180ffdbb180ffa66e2cffa66e2cffa66e2cff000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffdbb180ffa66e2cffdbb180ffdbb180ffdbb180ffa66e2cffdbb180ffdbb180ffdbb180ff000000ff00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffdbb180ffdbb180ffa66e2cffa66e2cffdbb180ffdbb180ffdbb180ffa66e2cffa66e2cff000000ff000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffdbb180ffdbb180ffdbb180ff000000ffd29d60ffdbb180ffdbb180ffdbb180ff000000ffd29d60ff000000ff000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffdbb180ffdbb180ffdbb180ffdbb180ffdbb180ffdbb180ffdbb180ffdbb180ffdbb180ffdbb180ff000000ff000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ff000000ffdbb180ffdbb180ffdbb180ffdbb180ffdbb180ffdbb180ffdbb180ffdbb180ffdbb180ff000000ff00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffdbb180ffdbb180ffdbb180ffdbb180ffdbb180ff000000ff000000ffdbb180ffdbb180ff000000ff00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffdbb180ffdbb180ffdbb180ffa66e2cffa66e2cffa66e2cffa66e2cffa66e2cffdbb180ff000000ff00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffdbb180ffdbb180ffa66e2cffa66e2cffa66e2cffa66e2cffa66e2cffa66e2cffa66e2cff000000ff00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffdbb180ffdbb180ffdbb180ffdbb180ff000000ff000000ff000000ffdbb180ffdbb180ff000000ff00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffdbb180ffdbb180ffdbb180ffdbb180ffdbb180ffdbb180ffdbb180ffdbb180ffdbb180ff000000ff00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffdbb180ffdbb180ffdbb180ffdbb180ffdbb180ffdbb180ffdbb180ffdbb180ff000000ff0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffdbb180ffdbb180ffdbb180ff000000ff000000ff000000ff000000ff000000ff000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffdbb180ffdbb180ffdbb180ff000000ff00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffdbb180ffdbb180ffdbb180ff000000ff00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000';

    // User1 adds image for punk ID 1 (should pass)
    const addTxUser1 = await myContract.connect(user1).addPunkImage(1, imageData);
    await addTxUser1.wait();
    console.log('::Punk added successfully!');

    // User2 tries to add image for punk ID 0 (should fail)
    try {
      const addTxUser2 = await myContract.connect(user2).addPunkImage(0, imageData);
      await addTxUser2.wait();
    } catch (error) {
      console.log('::Error:', error.message);
    }
  });
});